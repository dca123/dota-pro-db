// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package stratz

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// getHerosConstantsConstantQuery includes the requested fields of the GraphQL type ConstantQuery.
type getHerosConstantsConstantQuery struct {
	Heroes []getHerosConstantsConstantQueryHeroesHeroType `json:"heroes"`
}

// GetHeroes returns getHerosConstantsConstantQuery.Heroes, and is useful for accessing the field via an interface.
func (v *getHerosConstantsConstantQuery) GetHeroes() []getHerosConstantsConstantQueryHeroesHeroType {
	return v.Heroes
}

// getHerosConstantsConstantQueryHeroesHeroType includes the requested fields of the GraphQL type HeroType.
type getHerosConstantsConstantQueryHeroesHeroType struct {
	Id          int    `json:"id"`
	Name        string `json:"name"`
	DisplayName string `json:"displayName"`
	ShortName   string `json:"shortName"`
}

// GetId returns getHerosConstantsConstantQueryHeroesHeroType.Id, and is useful for accessing the field via an interface.
func (v *getHerosConstantsConstantQueryHeroesHeroType) GetId() int { return v.Id }

// GetName returns getHerosConstantsConstantQueryHeroesHeroType.Name, and is useful for accessing the field via an interface.
func (v *getHerosConstantsConstantQueryHeroesHeroType) GetName() string { return v.Name }

// GetDisplayName returns getHerosConstantsConstantQueryHeroesHeroType.DisplayName, and is useful for accessing the field via an interface.
func (v *getHerosConstantsConstantQueryHeroesHeroType) GetDisplayName() string { return v.DisplayName }

// GetShortName returns getHerosConstantsConstantQueryHeroesHeroType.ShortName, and is useful for accessing the field via an interface.
func (v *getHerosConstantsConstantQueryHeroesHeroType) GetShortName() string { return v.ShortName }

// getHerosResponse is returned by getHeros on success.
type getHerosResponse struct {
	// Queries used to query constants in Dota.
	Constants getHerosConstantsConstantQuery `json:"constants"`
}

// GetConstants returns getHerosResponse.Constants, and is useful for accessing the field via an interface.
func (v *getHerosResponse) GetConstants() getHerosConstantsConstantQuery { return v.Constants }

// getItemsConstantsConstantQuery includes the requested fields of the GraphQL type ConstantQuery.
type getItemsConstantsConstantQuery struct {
	// Find item details by item id. id is a required input field.
	Items []getItemsConstantsConstantQueryItemsItemType `json:"items"`
}

// GetItems returns getItemsConstantsConstantQuery.Items, and is useful for accessing the field via an interface.
func (v *getItemsConstantsConstantQuery) GetItems() []getItemsConstantsConstantQueryItemsItemType {
	return v.Items
}

// getItemsConstantsConstantQueryItemsItemType includes the requested fields of the GraphQL type ItemType.
type getItemsConstantsConstantQueryItemsItemType struct {
	Id          int    `json:"id"`
	Name        string `json:"name"`
	DisplayName string `json:"displayName"`
	ShortName   string `json:"shortName"`
	Image       string `json:"image"`
}

// GetId returns getItemsConstantsConstantQueryItemsItemType.Id, and is useful for accessing the field via an interface.
func (v *getItemsConstantsConstantQueryItemsItemType) GetId() int { return v.Id }

// GetName returns getItemsConstantsConstantQueryItemsItemType.Name, and is useful for accessing the field via an interface.
func (v *getItemsConstantsConstantQueryItemsItemType) GetName() string { return v.Name }

// GetDisplayName returns getItemsConstantsConstantQueryItemsItemType.DisplayName, and is useful for accessing the field via an interface.
func (v *getItemsConstantsConstantQueryItemsItemType) GetDisplayName() string { return v.DisplayName }

// GetShortName returns getItemsConstantsConstantQueryItemsItemType.ShortName, and is useful for accessing the field via an interface.
func (v *getItemsConstantsConstantQueryItemsItemType) GetShortName() string { return v.ShortName }

// GetImage returns getItemsConstantsConstantQueryItemsItemType.Image, and is useful for accessing the field via an interface.
func (v *getItemsConstantsConstantQueryItemsItemType) GetImage() string { return v.Image }

// getItemsResponse is returned by getItems on success.
type getItemsResponse struct {
	// Queries used to query constants in Dota.
	Constants getItemsConstantsConstantQuery `json:"constants"`
}

// GetConstants returns getItemsResponse.Constants, and is useful for accessing the field via an interface.
func (v *getItemsResponse) GetConstants() getItemsConstantsConstantQuery { return v.Constants }

// The query executed by getHeros.
const getHeros_Operation = `
query getHeros {
	constants {
		heroes {
			id
			name
			displayName
			shortName
		}
	}
}
`

func getHeros(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *getHerosResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "getHeros",
		Query:  getHeros_Operation,
	}

	data_ = &getHerosResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by getItems.
const getItems_Operation = `
query getItems {
	constants {
		items {
			id
			name
			displayName
			shortName
			image
		}
	}
}
`

func getItems(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *getItemsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "getItems",
		Query:  getItems_Operation,
	}

	data_ = &getItemsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}
